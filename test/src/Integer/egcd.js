import test from 'ava' ;

import { ZZ } from "../../../src/index.js" ;

function macro ( t , a , b , expected ) {

	const { gcd , x , y , u , v } = a.egcd(b) ;

	t.deepEqual(
		{
			gcd: expected.gcd.toString(),
			x: expected.x.toString(),
			y: expected.y.toString(),
			u: expected.u.toString(),
			v: expected.v.toString(),
		} ,
		{
			gcd: gcd.toString(),
			x: x.toString(),
			y: y.toString(),
			u: u.toString(),
			v: v.toString(),
		} ,
	) ;

	t.true( a.mul(x).add(b.mul(y)).eq(gcd) ) ;
	t.true( a.mul(u).add(b.mul(v)).iszero() ) ;

}

macro.title = (providedTitle, a, b, { gcd , x , y , u , v }) => `egcd(${a.toString()},${b.toString()}) = ${gcd.toString()} = ${x.toString()} * ${a.toString()} + ${y.toString()} * ${b.toString()} AND ${u.toString()} * ${a.toString()} + ${v.toString()} * ${b.toString()} = 0` ;

test( macro , ZZ.$0() , ZZ.$0() , {
	gcd: ZZ.$0() ,
	x: ZZ.$1() ,
	y: ZZ.$0() ,
	u: ZZ.$0() ,
	v: ZZ.$1() ,
} ) ;

test( macro , ZZ.$1() , ZZ.$0() , {
	gcd: ZZ.$1() ,
	x: ZZ.$1() ,
	y: ZZ.$0() ,
	u: ZZ.$0() ,
	v: ZZ.$1() ,
} ) ;

test( macro , ZZ.$_1() , ZZ.$0() , {
	gcd: ZZ.$1() ,
	x: ZZ.$_1() ,
	y: ZZ.$0() ,
	u: ZZ.$0() ,
	v: ZZ.$1() ,
} ) ;

test( macro , ZZ.$0() , ZZ.$1() , {
	gcd: ZZ.$1() ,
	x: ZZ.$0() ,
	y: ZZ.$1() ,
	u: ZZ.$1() ,
	v: ZZ.$0() ,
} ) ;


test( macro , ZZ.$1() , ZZ.$1() , {
	gcd: ZZ.$1() ,
	x: ZZ.$0() ,
	y: ZZ.$1() ,
	u: ZZ.$1() ,
	v: ZZ.$_1() ,
} ) ;

test( macro , ZZ.$1() , ZZ.$_1() , {
	gcd: ZZ.$1() ,
	x: ZZ.$0() ,
	y: ZZ.$_1() ,
	u: ZZ.$1() ,
	v: ZZ.$1() ,
} ) ;

test( macro , ZZ.$_1() , ZZ.$1() , {
	gcd: ZZ.$1() ,
	x: ZZ.$0() ,
	y: ZZ.$1() ,
	u: ZZ.$_1() ,
	v: ZZ.$_1() ,
} ) ;

test( macro , ZZ.$_1() , ZZ.$_1() , {
	gcd: ZZ.$1() ,
	x: ZZ.$0() ,
	y: ZZ.$_1() ,
	u: ZZ.$_1() ,
	v: ZZ.$1() ,
} ) ;

test( macro , ZZ.from(2) , ZZ.from(2) , {
	gcd: ZZ.from(2) ,
	x: ZZ.$0() ,
	y: ZZ.$1() ,
	u: ZZ.$1() ,
	v: ZZ.$_1() ,
} ) ;

test( macro , ZZ.from(2) , ZZ.from(3) , {
	gcd: ZZ.$1() ,
	x: ZZ.$_1() ,
	y: ZZ.$1() ,
	u: ZZ.from(3) ,
	v: ZZ.from(-2) ,
} ) ;

test( macro , ZZ.from(3) , ZZ.from(4) , {
	gcd: ZZ.$1() ,
	x: ZZ.$_1() ,
	y: ZZ.$1() ,
	u: ZZ.from(4) ,
	v: ZZ.from(-3) ,
} ) ;

test( macro , ZZ.from(2) , ZZ.from(4) , {
	gcd: ZZ.from(2) ,
	x: ZZ.$1() ,
	y: ZZ.$0() ,
	u: ZZ.from(-2) ,
	v: ZZ.from(1) ,
} ) ;

test( macro , ZZ.from(73218321) , ZZ.from(73218321) , {
	gcd: ZZ.from(73218321) ,
	x: ZZ.$0() ,
	y: ZZ.$1() ,
	u: ZZ.$1() ,
	v: ZZ.$_1() ,
} ) ;

test( macro ,
	ZZ.from('240') ,
	ZZ.from('46') ,
	{
		gcd: ZZ.from('2') ,
		x: ZZ.from('-9') ,
		y: ZZ.from('47') ,
		u: ZZ.from('23') ,
		v: ZZ.from('-120') ,
	}
) ;

test( macro ,
	ZZ.from('999') ,
	ZZ.from('1') ,
	{
		gcd: ZZ.from('1') ,
		x: ZZ.from('0') ,
		y: ZZ.from('1') ,
		u: ZZ.from('1') ,
		v: ZZ.from('-999') ,
	}
) ;

test( macro ,
	ZZ.from('999') ,
	ZZ.from('2') ,
	{
		gcd: ZZ.from('1') ,
		x: ZZ.from('1') ,
		y: ZZ.from('-499') ,
		u: ZZ.from('-2') ,
		v: ZZ.from('999') ,
	}
) ;

test( macro ,
	ZZ.from('999') ,
	ZZ.from('3') ,
	{
		gcd: ZZ.from('3') ,
		x: ZZ.from('0') ,
		y: ZZ.from('1') ,
		u: ZZ.from('1') ,
		v: ZZ.from('-333') ,
	}
) ;

test( macro ,
	ZZ.from('999') ,
	ZZ.from('4') ,
	{
		gcd: ZZ.from('1') ,
		x: ZZ.from('-1') ,
		y: ZZ.from('250') ,
		u: ZZ.from('4') ,
		v: ZZ.from('-999') ,
	}
) ;

test( macro ,
	ZZ.from('999') ,
	ZZ.from('5') ,
	{
		gcd: ZZ.from('1') ,
		x: ZZ.from('-1') ,
		y: ZZ.from('200') ,
		u: ZZ.from('5') ,
		v: ZZ.from('-999') ,
	}
) ;

test( macro ,
	ZZ.from('999') ,
	ZZ.from('6') ,
	{
		gcd: ZZ.from('3') ,
		x: ZZ.from('1') ,
		y: ZZ.from('-166') ,
		u: ZZ.from('-2') ,
		v: ZZ.from('333') ,
	}
) ;

test( macro , ZZ.from('182719837289124387095732094932857943') , ZZ.from('218379128372') , {
	gcd: ZZ.from('1') ,
	x: ZZ.from('76391188915') ,
	y: ZZ.from('-63917214584236084614404336195015177') ,
	u: ZZ.from('-218379128372') ,
	v: ZZ.from('182719837289124387095732094932857943') ,
} ) ;

test( macro , ZZ.from('89798763754892653453379597352537489494736') , ZZ.from('978') , {
	gcd: ZZ.from('6') ,
	x: ZZ.from('57') ,
	y: ZZ.from('-5233670280193130109246050152448503988957') ,
	u: ZZ.from('-163') ,
	v: ZZ.from('14966460625815442242229932892089581582456') ,
} ) ;

test( macro , ZZ.from('1234567891011121314151617181920212223242526272829') , ZZ.from('1221') , {
	gcd: ZZ.from('3') ,
	x: ZZ.from('96') ,
	y: ZZ.from('-97066762929621331825188574499869265709486095161') ,
	u: ZZ.from('-407') ,
	v: ZZ.from('411522630337040438050539060640070741080842090943') ,
} ) ;

test( macro , ZZ.from('8918391893892839282938092838273908') , ZZ.from('9238902830982083209836079238902830') , {
	gcd: ZZ.from('18') ,
	x: ZZ.from('-196260821226532250117922974202329') ,
	y: ZZ.from('189452248728694447618227772406725') ,
	u: ZZ.from('513272379499004622768671068827935') ,
	v: ZZ.from('-495466216327379960163227379904106') ,
} ) ;

test( macro ,
	ZZ.from('37650526072328171936695291762250209370684337226819795603338569781977444693437332193180866661042770508342415236941382410000000000000000') ,
	ZZ.from('5696107759173612435215985096515090524728819689625373634782109911819800000000') ,
	{
		gcd: ZZ.from('12272004900965151087327615491240194950486574150898137749184200000000') ,
		x: ZZ.from('144546941') ,
		y: ZZ.from('-955436343708733262264503439145449113981822054797863712652831187021') ,
		u: ZZ.from('-464154619') ,
		v: ZZ.from('3068001225241287771831903872810048737621643537724534437296050000000') ,
	}
) ;

test( macro ,
	ZZ.from('67119411938628137065042623053470295860352899292113831399681459932104429712541137526114591678492374912832861154037280650094772951318333'),
	ZZ.from('48179292498495773577650761587652514616005124004102188905857708802854991702951275654450870129244763211021514910115253990099546035191850322100208219724128209064592'),
	{
		gcd: ZZ.from('52310721570994454309603316505452077132504750494613585448247191340916543146521771411345313270814742631'),
		x: ZZ.from('-296597046898323364982738776313288773735618113657314569865757'),
		y: ZZ.from('413194514451840753795917890556861'),
		u: ZZ.from('921021370984308903809270483207432932984032809428309483208432'),
		v: ZZ.from('-1283090921380921830183472943789243')
	}
) ;

test( macro ,
	ZZ.from('432098403928041873297392719837982749873983279473289479327493284793287498162393740164165983274864832164875183264') ,
	ZZ.from('7326498326418236481264389164986482164387619823741294681431648376821468213648217649873214639821') ,
	{
		gcd: ZZ.from('1') ,
		x: ZZ.from('-70043170308577841790901973523044584915855330486448613200408375753217211410942292553022335592') ,
		y: ZZ.from('4130969632145217993835085987649256842613363564725738267141839343576749111824609588437426577104148903196635909') ,
		u: ZZ.from('7326498326418236481264389164986482164387619823741294681431648376821468213648217649873214639821') ,
		v: ZZ.from('-432098403928041873297392719837982749873983279473289479327493284793287498162393740164165983274864832164875183264') ,
	}
) ;

test( macro ,
	ZZ.from('432098403928041873297392719837982749873983279473289479327493284793287498162393740164165983274864832164875183264') ,
	ZZ.from('73264983264182364812643891649864821643876198237412946814316483768214682136482176498573214639821208') ,
	{
		gcd: ZZ.from('776') ,
		x: ZZ.from('-41694456345076671794355149523694764177222151506203366353494197000190744202549435308862685363723') ,
		y: ZZ.from('245903393909088985240590322881406144770470086821972948207378985268602417576411281642626798219110113136324431') ,
		u: ZZ.from('94413638227039129913200891301372192840046647213161013935974850216771497598559505797130431236883') ,
		v: ZZ.from('-556827840113456022290454535873689110662349586950115308411718150506813786291744510520832452673794886810406164') ,
	}
) ;

test( macro ,
	ZZ.from('27464428722379302537066207419729547039001666019484342119914191943374771553192802830064910464708682216') ,
	ZZ.from('1235538557263503135080009921155585529085345118770499482621630836795609586373233972978224047042123566') ,
	{
		gcd: ZZ.from('74997500588773686591299665516865519759664950655978') ,
		x: ZZ.from('-7538724761555610090827422120944030717270450777967') ,
		y: ZZ.from('167576129173946225301933673091336299297968056079975') ,
		u: ZZ.from('16474396447399073360821991087445637049163796086747') ,
		v: ZZ.from('-366204586909799364719352460854718749306649209643172') ,
	}
) ;

test( macro ,
	ZZ.from('-27464428722379302537066207419729547039001666019484342119914191943374771553192802830064910464708682216') ,
	ZZ.from('1235538557263503135080009921155585529085345118770499482621630836795609586373233972978224047042123566') ,
	{
		gcd: ZZ.from('74997500588773686591299665516865519759664950655978') ,
		x: ZZ.from('7538724761555610090827422120944030717270450777967') ,
		y: ZZ.from('167576129173946225301933673091336299297968056079975') ,
		u: ZZ.from('-16474396447399073360821991087445637049163796086747') ,
		v: ZZ.from('-366204586909799364719352460854718749306649209643172') ,
	}
) ;

test( macro ,
	ZZ.from('27464428722379302537066207419729547039001666019484342119914191943374771553192802830064910464708682216') ,
	ZZ.from('-1235538557263503135080009921155585529085345118770499482621630836795609586373233972978224047042123566') ,
	{
		gcd: ZZ.from('74997500588773686591299665516865519759664950655978') ,
		x: ZZ.from('-7538724761555610090827422120944030717270450777967') ,
		y: ZZ.from('-167576129173946225301933673091336299297968056079975') ,
		u: ZZ.from('16474396447399073360821991087445637049163796086747') ,
		v: ZZ.from('366204586909799364719352460854718749306649209643172') ,
	}
) ;


test( macro ,
	ZZ.from('-27464428722379302537066207419729547039001666019484342119914191943374771553192802830064910464708682216') ,
	ZZ.from('-1235538557263503135080009921155585529085345118770499482621630836795609586373233972978224047042123566') ,
	{
		gcd: ZZ.from('74997500588773686591299665516865519759664950655978') ,
		x: ZZ.from('7538724761555610090827422120944030717270450777967') ,
		y: ZZ.from('-167576129173946225301933673091336299297968056079975') ,
		u: ZZ.from('-16474396447399073360821991087445637049163796086747') ,
		v: ZZ.from('366204586909799364719352460854718749306649209643172') ,
	}
) ;

test( macro ,
	ZZ.from('27464428722379302537066207419729547039001666019484342119914191943374771553192802830064910464708682216') ,
	ZZ.from('27464428722379302537066207419729547039001666019484342119914191943374771553192802830064910464708682216') ,
	{
		gcd: ZZ.from('27464428722379302537066207419729547039001666019484342119914191943374771553192802830064910464708682216') ,
		x: ZZ.$0() ,
		y: ZZ.$1() ,
		u: ZZ.$1() ,
		v: ZZ.$_1() ,
	}
) ;

// test generated with https://github.com/aureooms-research/gcd
