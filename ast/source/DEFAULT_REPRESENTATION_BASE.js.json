{
  "type": "File",
  "start": 0,
  "end": 778,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 14,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 778,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 14,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 46,
        "end": 84,
        "loc": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 38
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 55,
            "end": 63,
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 17
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 55,
              "end": 63,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 17
                },
                "identifierName": "MAX_BASE"
              },
              "name": "MAX_BASE",
              "leadingComments": null
            },
            "local": {
              "type": "Identifier",
              "start": 55,
              "end": 63,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 17
                },
                "identifierName": "MAX_BASE"
              },
              "name": "MAX_BASE"
            },
            "leadingComments": null
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 71,
          "end": 82,
          "loc": {
            "start": {
              "line": 2,
              "column": 25
            },
            "end": {
              "line": 2,
              "column": 36
            }
          },
          "extra": {
            "rawValue": "./_limits",
            "raw": "'./_limits'"
          },
          "value": "./_limits"
        },
        "leadingComments": [
          {
            "type": "CommentLine",
            "value": "import { DEFAULT_DISPLAY_BASE } from './' ;",
            "start": 0,
            "end": 45,
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 1,
                "column": 45
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "\n * Biggest power of DEFAULT_DISPLAY_BASE whose square holds in a single double\n * with full precision. For working correctly with multiplication algorithms\n * and for fast base DEFAULT_DISPLAY_BASE printing. On older machines with no\n * native doubles, it might be worth to only use ints.\n ",
            "start": 86,
            "end": 381,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 9,
                "column": 3
              }
            }
          },
          {
            "type": "CommentLine",
            "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(DEFAULT_DISPLAY_BASE,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(DEFAULT_DISPLAY_BASE))) ;",
            "start": 382,
            "end": 538,
            "loc": {
              "start": {
                "line": 10,
                "column": 0
              },
              "end": {
                "line": 10,
                "column": 156
              }
            }
          },
          {
            "type": "CommentLine",
            "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(16,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(16))) ;",
            "start": 539,
            "end": 659,
            "loc": {
              "start": {
                "line": 11,
                "column": 0
              },
              "end": {
                "line": 11,
                "column": 120
              }
            }
          },
          {
            "type": "CommentLine",
            "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(2,26) | 0;",
            "start": 660,
            "end": 724,
            "loc": {
              "start": {
                "line": 12,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 64
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 725,
        "end": 777,
        "loc": {
          "start": {
            "line": 13,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 52
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 732,
          "end": 777,
          "loc": {
            "start": {
              "line": 13,
              "column": 7
            },
            "end": {
              "line": 13,
              "column": 52
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 738,
              "end": 776,
              "loc": {
                "start": {
                  "line": 13,
                  "column": 13
                },
                "end": {
                  "line": 13,
                  "column": 51
                }
              },
              "id": {
                "type": "Identifier",
                "start": 738,
                "end": 765,
                "loc": {
                  "start": {
                    "line": 13,
                    "column": 13
                  },
                  "end": {
                    "line": 13,
                    "column": 40
                  },
                  "identifierName": "DEFAULT_REPRESENTATION_BASE"
                },
                "name": "DEFAULT_REPRESENTATION_BASE",
                "leadingComments": null
              },
              "init": {
                "type": "Identifier",
                "start": 768,
                "end": 776,
                "loc": {
                  "start": {
                    "line": 13,
                    "column": 43
                  },
                  "end": {
                    "line": 13,
                    "column": 51
                  },
                  "identifierName": "MAX_BASE"
                },
                "name": "MAX_BASE"
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "\n * Biggest power of DEFAULT_DISPLAY_BASE whose square holds in a single double\n * with full precision. For working correctly with multiplication algorithms\n * and for fast base DEFAULT_DISPLAY_BASE printing. On older machines with no\n * native doubles, it might be worth to only use ints.\n ",
              "start": 86,
              "end": 381,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 0
                },
                "end": {
                  "line": 9,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentLine",
              "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(DEFAULT_DISPLAY_BASE,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(DEFAULT_DISPLAY_BASE))) ;",
              "start": 382,
              "end": 538,
              "loc": {
                "start": {
                  "line": 10,
                  "column": 0
                },
                "end": {
                  "line": 10,
                  "column": 156
                }
              }
            },
            {
              "type": "CommentLine",
              "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(16,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(16))) ;",
              "start": 539,
              "end": 659,
              "loc": {
                "start": {
                  "line": 11,
                  "column": 0
                },
                "end": {
                  "line": 11,
                  "column": 120
                }
              }
            },
            {
              "type": "CommentLine",
              "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(2,26) | 0;",
              "start": 660,
              "end": 724,
              "loc": {
                "start": {
                  "line": 12,
                  "column": 0
                },
                "end": {
                  "line": 12,
                  "column": 64
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "\n * Biggest power of DEFAULT_DISPLAY_BASE whose square holds in a single double\n * with full precision. For working correctly with multiplication algorithms\n * and for fast base DEFAULT_DISPLAY_BASE printing. On older machines with no\n * native doubles, it might be worth to only use ints.\n ",
            "start": 86,
            "end": 381,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 9,
                "column": 3
              }
            }
          },
          {
            "type": "CommentLine",
            "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(DEFAULT_DISPLAY_BASE,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(DEFAULT_DISPLAY_BASE))) ;",
            "start": 382,
            "end": 538,
            "loc": {
              "start": {
                "line": 10,
                "column": 0
              },
              "end": {
                "line": 10,
                "column": 156
              }
            }
          },
          {
            "type": "CommentLine",
            "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(16,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(16))) ;",
            "start": 539,
            "end": 659,
            "loc": {
              "start": {
                "line": 11,
                "column": 0
              },
              "end": {
                "line": 11,
                "column": 120
              }
            }
          },
          {
            "type": "CommentLine",
            "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(2,26) | 0;",
            "start": 660,
            "end": 724,
            "loc": {
              "start": {
                "line": 12,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 64
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentLine",
      "value": "import { DEFAULT_DISPLAY_BASE } from './' ;",
      "start": 0,
      "end": 45,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 45
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "\n * Biggest power of DEFAULT_DISPLAY_BASE whose square holds in a single double\n * with full precision. For working correctly with multiplication algorithms\n * and for fast base DEFAULT_DISPLAY_BASE printing. On older machines with no\n * native doubles, it might be worth to only use ints.\n ",
      "start": 86,
      "end": 381,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(DEFAULT_DISPLAY_BASE,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(DEFAULT_DISPLAY_BASE))) ;",
      "start": 382,
      "end": 538,
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 156
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(16,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(16))) ;",
      "start": 539,
      "end": 659,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 120
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(2,26) | 0;",
      "start": 660,
      "end": 724,
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 64
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentLine",
      "value": "import { DEFAULT_DISPLAY_BASE } from './' ;",
      "start": 0,
      "end": 45,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 46,
      "end": 52,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 53,
      "end": 54,
      "loc": {
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 2,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "MAX_BASE",
      "start": 55,
      "end": 63,
      "loc": {
        "start": {
          "line": 2,
          "column": 9
        },
        "end": {
          "line": 2,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 64,
      "end": 65,
      "loc": {
        "start": {
          "line": 2,
          "column": 18
        },
        "end": {
          "line": 2,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 66,
      "end": 70,
      "loc": {
        "start": {
          "line": 2,
          "column": 20
        },
        "end": {
          "line": 2,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./_limits",
      "start": 71,
      "end": 82,
      "loc": {
        "start": {
          "line": 2,
          "column": 25
        },
        "end": {
          "line": 2,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 83,
      "end": 84,
      "loc": {
        "start": {
          "line": 2,
          "column": 37
        },
        "end": {
          "line": 2,
          "column": 38
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "\n * Biggest power of DEFAULT_DISPLAY_BASE whose square holds in a single double\n * with full precision. For working correctly with multiplication algorithms\n * and for fast base DEFAULT_DISPLAY_BASE printing. On older machines with no\n * native doubles, it might be worth to only use ints.\n ",
      "start": 86,
      "end": 381,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(DEFAULT_DISPLAY_BASE,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(DEFAULT_DISPLAY_BASE))) ;",
      "start": 382,
      "end": 538,
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 156
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(16,Math.floor(Math.log(Math.sqrt(Math.pow(2,53)))/Math.log(16))) ;",
      "start": 539,
      "end": 659,
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 120
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "export const DEFAULT_REPRESENTATION_BASE = Math.pow(2,26) | 0;",
      "start": 660,
      "end": 724,
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 64
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 725,
      "end": 731,
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 732,
      "end": 737,
      "loc": {
        "start": {
          "line": 13,
          "column": 7
        },
        "end": {
          "line": 13,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "DEFAULT_REPRESENTATION_BASE",
      "start": 738,
      "end": 765,
      "loc": {
        "start": {
          "line": 13,
          "column": 13
        },
        "end": {
          "line": 13,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 766,
      "end": 767,
      "loc": {
        "start": {
          "line": 13,
          "column": 41
        },
        "end": {
          "line": 13,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "MAX_BASE",
      "start": 768,
      "end": 776,
      "loc": {
        "start": {
          "line": 13,
          "column": 43
        },
        "end": {
          "line": 13,
          "column": 51
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 776,
      "end": 777,
      "loc": {
        "start": {
          "line": 13,
          "column": 51
        },
        "end": {
          "line": 13,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 778,
      "end": 778,
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 0
        }
      }
    }
  ]
}